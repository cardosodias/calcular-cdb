{"ast":null,"code":"var _class;\nimport { catchError, map, of } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ResgateCdbService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://localhost:7297/api/v1/cdb/resgatar';\n  }\n  resgatar() {\n    return this.http.get(this.apiUrl);\n  }\n  resgatarDois(CdbResgateRequest) {\n    console.log('servico');\n    console.log(CdbResgateRequest);\n    return this.http.post(this.apiUrl, CdbResgateRequest).pipe(map(res => res), catchError(err => {\n      this.toastr.warning(err.error.errors.detail, \"Ops!\");\n      return of();\n    }));\n  }\n}\n_class = ResgateCdbService;\n_class.ɵfac = function ResgateCdbService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["catchError","map","of","ResgateCdbService","constructor","http","apiUrl","resgatar","get","resgatarDois","CdbResgateRequest","console","log","post","pipe","res","err","toastr","warning","error","errors","detail","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Eder\\Documents\\teste B3\\app\\cdb-web\\src\\app\\services\\resgate-cdb.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {  catchError, map, Observable, of } from \"rxjs\";\nimport { CdbResgateResponse } from '../models/cdb-resgate-response.model';\nimport { CdbResgateRequest } from '../models/cdb-resgate-request.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResgateCdbService {\n  \n  private apiUrl = 'https://localhost:7297/api/v1/cdb/resgatar'\n  \n  constructor(private http: HttpClient) { }\n\n  resgatar():Observable<CdbResgateResponse>{\n    return this.http.get<CdbResgateResponse>(this.apiUrl);\n  }\n\n  resgatarDois(CdbResgateRequest: any){\n    console.log('servico');\n    console.log(CdbResgateRequest);\n    return this.http.post(this.apiUrl, CdbResgateRequest).pipe(\n      map((res: CdbResgateResponse) => res),\n      catchError(err => {\n        this.toastr.warning(err.error.errors.detail, \"Ops!\")\n        return of()\n      })\n  }\n}\n"],"mappings":";AAEA,SAAUA,UAAU,EAAEC,GAAG,EAAcC,EAAE,QAAQ,MAAM;;;AAOvD,OAAM,MAAOC,iBAAiB;EAI5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,4CAA4C;EAErB;EAExCC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAqB,IAAI,CAACF,MAAM,CAAC;EACvD;EAEAG,YAAYA,CAACC,iBAAsB;IACjCC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtBD,OAAO,CAACC,GAAG,CAACF,iBAAiB,CAAC;IAC9B,OAAO,IAAI,CAACL,IAAI,CAACQ,IAAI,CAAC,IAAI,CAACP,MAAM,EAAEI,iBAAiB,CAAC,CAACI,IAAI,CACxDb,GAAG,CAAEc,GAAuB,IAAKA,GAAG,CAAC,EACrCf,UAAU,CAACgB,GAAG,IAAG;MACf,IAAI,CAACC,MAAM,CAACC,OAAO,CAACF,GAAG,CAACG,KAAK,CAACC,MAAM,CAACC,MAAM,EAAE,MAAM,CAAC;MACpD,OAAOnB,EAAE,EAAE;IACb,CAAC,CAAC;EACN;;SAnBWC,iBAAiB;;mBAAjBA,MAAiB,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAjBtB,MAAiB;EAAAuB,OAAA,EAAjBvB,MAAiB,CAAAwB,IAAA;EAAAC,UAAA,EAFhB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}